# -*- coding: utf-8 -*-
"""Untitled29.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v11rRn7omuJECnmokNfCz8Zz0Oyqpkwz
    
Early stopping practice
"""

import tensorflow as tf
import numpy as np
from tensorflow import keras
from tensorflow.keras.layers import *
from tensorflow.keras.models import Sequential
from tensorflow.keras.losses import categorical_crossentropy
from tensorflow.keras.callbacks import EarlyStopping
np.random.seed(25)
#train,test etc. input data
(X_train, y_train), (X_test, y_test) = keras.datasets.mnist.load_data()
print("X_train", X_train.shape)
print("y_train", y_train.shape)
print("X_test", X_test.shape)
print("y_test", y_test.shape)
#checking THE data
X_train = X_train.reshape(X_train.shape[0], 28, 28, 1)
X_test = X_test.reshape(X_test.shape[0], 28, 28, 1)

#normalizing test values, data..
X_train = X_train.astype('float64')
X_test = X_test.astype('float64')
X_train/=255.0
X_test/=255.0
#shape x_train 
X_train.shape
X_train[:5,:]
#model for CNN
model = Sequential()
model.add(Conv2D(32, kernel_size=(3, 3), activation = 'relu', input_shape = input_shape))
model.add(BatchNormalization())
model.add(MaxPool2D(pool_size = (2, 2)))
model.add(Dropout(0.2))
model.add(Flatten())
model.add(Dense(10, activation = 'softmax'))

model.summary()
#model for images
#
model.compile(optimizer=keras.optimizers.Adadelta(), loss=keras.losses.categorical_crossentropy,metrics=['accuracy']) 
  
early=EarlyStopping(monitor = 'val_loss', patience = 10)

asd = model.fit(X_train, Y_train, batch_size = 200, epochs = 10, verbose = 1, validation_data = (X_test, y_test), callbacks = [early])
scores = model.evaluate(X_test, y_test, verbose=0)
