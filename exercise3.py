# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qIQzLmrotdKpl7LiIDleGtzHf8I3uyiE
"""

import tensorflow.compat.v1 as tf
tf.disable_v2_behavior()

import numpy as np
  
def function1(fn): ##functio
    if fn >= 0: 
        return 1
    else: 
        return 0
  
def per(x, y, z): 
    fn = np.dot(y, x) + z 
    y = function1(fn) 
    return y 

def andfunction(x): 
    y = np.array([1, 1]) 
    z = -1.5
    return per(x, y, z) 

def orfunction(x): 
    y = np.array([1, 1]) 
    z = -0.5
    return per(x, y, z) 

def notfuction(x):
    nota = -1
    notb = 0.5
    return per(x,nota,notb)
  
def xorfunction(x): 
    y1 = andfunction(x) 
    y2 = orfunction(x) 
    y3 = notfuction(y1) 
    final_x = np.array([y2, y3])
    out = andfunction(final_x) 
    return out


test1 = np.array([0, 1]) 
test2 = np.array([1, 1]) 
test3 = np.array([0, 0]) 
test4 = np.array([1, 0]) 

test5 = np.array(1) 
test6 = np.array(0)

print("AND({}, {}) = {}".format(0, 1, andfunction(test1))) 
print("AND({}, {}) = {}".format(1, 1, andfunction(test2))) 
print("AND({}, {}) = {}".format(0, 0, andfunction(test3))) 
print("AND({}, {}) = {}".format(1, 0, andfunction(test4)))
  
print("OR({}, {}) = {}".format(0, 1, orfunction(test1))) 
print("OR({}, {}) = {}".format(1, 1, orfunction(test2))) 
print("OR({}, {}) = {}".format(0, 0, orfunction(test3))) 
print("OR({}, {}) = {}".format(1, 0, orfunction(test4)))


print("NOT({}) = {}".format(1, notfuction(test5))) 
print("NOT({}) = {}".format(0, notfuction(test6))) 

print("XOR({}, {}) = {}".format(0, 1, xorfunction(test1))) 
print("XOR({}, {}) = {}".format(1, 1, xorfunction(test2))) 
print("XOR({}, {}) = {}".format(0, 0, xorfunction(test3))) 
print("XOR({}, {}) = {}".format(1, 0, xorfunction(test4)))